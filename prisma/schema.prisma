generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Skill {
  id       String     @id @default(uuid())
  title    String
  display  Boolean    @default(true)
  image    ImageFile? @relation("SkillImage")
  projects Project[]  @relation("ProjectSkills")
}

model Project {
  id        String      @id @default(cuid())
  title     String
  shortDesc String
  longDesc  String
  order     Int         @default(1)
  type      String?
  cover     ImageFile?  @relation("CoverProject")
  medias    ImageFile[] @relation("MediasProject")
  links     Link[]      @relation("ProjectLinks")
  skills    Skill[]     @relation("ProjectSkills")
}

model ImageFile {
  id              String       @id @default(cuid())
  url             String
  alt             String
  skillId         String?      @unique
  coverProjectId  String?      @unique
  mediasProjectId String?
  SectionPageId   String?
  linkId          String?      @unique
  SectionPage     SectionPage? @relation("SectionPageImage", fields: [SectionPageId], references: [id], onDelete: Cascade)
  coverProject    Project?     @relation("CoverProject", fields: [coverProjectId], references: [id], onDelete: Cascade)
  mediasProject   Project?     @relation("MediasProject", fields: [mediasProjectId], references: [id], onDelete: Cascade)
  skill           Skill?       @relation("SkillImage", fields: [skillId], references: [id], onDelete: Cascade)
  link            Link?        @relation("LinkImage", fields: [linkId], references: [id], onDelete: Cascade)
}

model Link {
  id        String     @id @default(cuid())
  url       String
  title     String
  order     Int        @default(1)
  target    String?    @default("__blank")
  type      String?
  inNav     Boolean?   @default(true)
  isAdmin   Boolean?   @default(false)
  projectId String?
  iconId    String?
  icon      Icon?      @relation(fields: [iconId], references: [id])
  project   Project?   @relation("ProjectLinks", fields: [projectId], references: [id], onDelete: Cascade)
  image     ImageFile? @relation("LinkImage")
  imageId   String?    @unique
}

model Icon {
  id   String @id @default(cuid())
  name String
  Link Link[]
}

model SectionPage {
  id       String      @id @default(cuid())
  type     String
  order    Int         @default(1)
  contents Content[]
  images   ImageFile[] @relation("SectionPageImage")
  titles   Title[]
}

model Title {
  id            String       @id @default(cuid())
  text          String
  sectionPageId String?
  sectionPage   SectionPage? @relation(fields: [sectionPageId], references: [id], onDelete: Cascade)
}

model Content {
  id            String       @id @default(cuid())
  text          String
  sectionPageId String?
  sectionPage   SectionPage? @relation(fields: [sectionPageId], references: [id], onDelete: Cascade)
}
